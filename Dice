import androidx.compose.foundation.Image
import androidx.compose.foundation.layout.*
import androidx.compose.material.Button
import androidx.compose.runtime.*
import androidx.compose.runtime.R
import androidx.compose.ui.Alignment
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp

apackage com.example.diceapp

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.material.MaterialTheme
import androidx.compose.material.Surface
import androidx.compose.material.Text
import androidx.compose.ui.Modifier
import androidx.compose.ui.tooling.preview.Preview
import com.example.diceapp.ui.theme.DiceAppTheme

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            DiceAppTheme {
                // A surface container using the 'background' color from the theme
                Surface(
                    modifier = Modifier.fillMaxSize(),
                    color = MaterialTheme.colors.background
                ) {
                    Greeting()
                }
            }
        }
    }
}

@Composable
fun Greeting() {
    // result is a variable integer value which is mutable ! ! !
    var result by remember {
        mutableStateOf(1)
    }

    // ImageResource is a variable which pass image in ImageView according to result ! ! !
//    var ImageResource = when(result){
//    }

    // we using COLUMN  for placing views in Vertical Orientation ! ! !
    Column(
        modifier = Modifier.fillMaxSize(),
        horizontalAlignment = Alignment.CenterHorizontally,
        verticalArrangement = Arrangement.Center
    ) {

        //Image of Dice face according to result ! ! !
        Image(painter = painterResource(ImageResource), contentDescription = "image")

        // Spacer is use for giving space between the Views ! ! !
        Spacer(modifier = Modifier.height(100.dp))

        // Generating random number by Button ! ! !
        Button(onClick = { result = (1..6).random() },
            modifier = Modifier.height(80.dp).width(110.dp)) {
            Text(text = "Roll", fontSize = 30.sp)
        }
    }
}

@Preview(showBackground = true)
@Composable
fun DefaultPreview() {
    DiceAppTheme {
        Greeting()
    }
}
